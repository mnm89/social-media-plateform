services:
  user-db:
    image: postgres:latest
    environment:
      POSTGRES_USER: user_user
      POSTGRES_PASSWORD: user_password
      POSTGRES_DB: user_db
    ports:
      - "5433:5432"
    volumes:
      - user_data:/var/lib/postgresql/data

  post-db:
    image: postgres:latest
    environment:
      POSTGRES_USER: post_user
      POSTGRES_PASSWORD: post_password
      POSTGRES_DB: post_db
    ports:
      - "5434:5432"
    volumes:
      - post_data:/var/lib/postgresql/data

  notification-cache:
    image: redis:latest
    ports:
      - "6380:6379" # Separate Redis instance for notification storage (if desired)

  redis:
    image: redis:latest
    ports:
      - "6379:6379"

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"

  api-gateway:
    build: ./api-gateway
    ports:
      - "80:80" # Expose API Gateway on host port 80
    depends_on:
      - user-service
      - post-service
      - notification-service
      - recommendation-service

  user-service:
    build: ./user-service
    ports:
      - "3000:3000"
    environment:
      DATABASE_URL: postgres://user_user:user_password@user-db/user_db
    depends_on:
      - user-db
      - redis

  post-service:
    build: ./post-service
    ports:
      - "3001:3000"
    environment:
      DATABASE_URL: postgres://post_user:post_password@post-db/post_db
    depends_on:
      - post-db
      - redis

  notification-service:
    build: ./notification-service
    ports:
      - "3002:3000"
    environment:
      REDIS_HOST: notification-cache
    depends_on:
      - notification-cache
      - rabbitmq

  recommendation-service:
    build: ./recommendation-service
    ports:
      - "3003:3000"
    environment:
      REDIS_HOST: redis
    depends_on:
      - redis
      - rabbitmq

volumes:
  user_data:
  post_data:
