events
}

http {
    # Define upstreams for each service
    upstream user_service {
        server user-service:3000;
    }

    upstream post_service {
        server post-service:3000;
    }

    upstream notification_service {
        server notification-service:3000;
    }

    upstream recommendation_service {
        server recommendation-service:3000;
    }

    server {
        listen 80;

        # Route /users/* requests to the User Service
        location /users/ {
            proxy_pass http://user_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Route /posts/* requests to the Post Service
        location /posts/ {
            proxy_pass http://post_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Route /notifications/* requests to the Notification Service
        location /notifications/ {
            proxy_pass http://notification_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Route /recommendations/* requests to the Recommendation Service
        location /recommendations/ {
            proxy_pass http://recommendation_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}